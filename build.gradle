import org.jetbrains.kotlin.gradle.dsl.ExplicitApiMode

buildscript {

    //https://github.com/Kotlin/kotlinx.coroutines
    ext.coroutinesVersion = "1.6.1"
    //https://github.com/csense-oss/csense-kotlin-test
    ext.csenseTestsVersion = "0.0.60"
    //https://github.com/csense-oss/csense-kotlin-annotations
    ext.csenseAnnotationVersion = "0.0.61"

    //https://github.com/JetBrains/kotlin/releases
    ext.kotlin_version = "1.8.10"

    //library settings - https://github.com/csense-oss/csense-kotlin
    ext.csenseVersionName = "0.0.60-snapshot3"

    ext.csenseUserOrg = "csense-oss"
    ext.csenseGroupId = "csense.kotlin"
    ext.csenseArtifactId = "csense-kotlin"
    ext.csenseLicense = "MIT"
    ext.csenseLicenseUrl = "https://mit-license.org/"

    ext.csenseDeveloperAlias = "tvede-dk"
    ext.csenseDeveloperName = "Kasper Tvede"
    ext.csenseDeveloperEmail = "csenseoss@tvedesys.dk"

    ext.csenseWebsite = "https://github.com/csense-oss/csense-kotlin"
    ext.csenseGit = "https://github.com/csense-oss/csense-kotlin.git"
    ext.csenseArtifactDescription = "aim of this project is to add further extensions, features to the std lib and \"very common\" operations."
    //end library settings
}


plugins {
    //https://github.com/JetBrains/kotlin
    id 'org.jetbrains.kotlin.multiplatform' version "$kotlin_version"
    id "maven-publish"
    //https://github.com/jeremylong/DependencyCheck https://plugins.gradle.org/plugin/org.owasp.dependencycheck
    id "org.owasp.dependencycheck" version "8.1.2"
}

project.group = csenseGroupId
project.version = csenseVersionName

repositories {
    mavenCentral()
    maven {
        url 'https://pkgs.dev.azure.com/csense-oss/csense-oss/_packaging/csense-oss/maven/v1'
        name 'csense-oss'
    }
}

kotlin {
    explicitApi = ExplicitApiMode.Strict
    jvm {
        compilations.configureEach {
            kotlinOptions.jvmTarget = '11'
        }
        withJava()
        test {
            useJUnitPlatform()
        }
    }
    js(IR) {
        browser {
            testTask {
                useKarma {
                    useFirefox()
                }
            }
        }
        nodejs()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
                implementation "csense.kotlin:csense-kotlin-annotations:$csenseAnnotationVersion"
            }
        }
        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
                implementation "csense.kotlin:csense-kotlin-tests:$csenseTestsVersion"
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {

        }

        jvmTest {
            dependencies {
            }
        }

        jsMain {

        }

        jsTest {

        }
        all {
            languageSettings {
                languageVersion = "1.8"
                optIn("kotlin.contracts.ExperimentalContracts")
                progressiveMode = true
            }
        }
    }
}

dependencyCheck {
    def allConfigsAsList = new ArrayList<>(configurations.getNames())
    def nonTestConfigurations = allConfigsAsList.findAll {
        !it.contains("Test") && (
                it.startsWith("js") ||
                        it.startsWith("jvm") ||
                        it.startsWith("jvm") ||
                        it.startsWith("common")
        )
    }

    analyzers {
        assemblyEnabled = false
    }
    scanConfigurations = nonTestConfigurations
    skipTestGroups = true
    failOnError = true
}


apply from: "$rootDir/gradle/publish.gradle"

task uploadProd(dependsOn: ["assemble", "allTests", "dependencyCheckAggregate", "publish"])


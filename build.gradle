buildscript {

    ext.coroutinesVersion = "1.4.3"
    ext.junit5Version = "5.7.0"
    ext.csenseTestsVersion = "0.0.45"
    ext.csenseAnnotationVersion = "0.0.40"

    //library settings
    ext.csenseUserOrg = "csense-oss"
    ext.csenseRepoName = "maven"
    ext.csenseVersionName = "0.0.46-snapshot.2"
    ext.csenseGroupId = "csense.kotlin"
    ext.csenseArtifactId = "csense-kotlin"
    ext.csenseGithub = "csense-oss/csense-kotlin"
    ext.csenseLicense = "MIT"
    ext.csenseLicenseUrl = "https://mit-license.org/"

    ext.csenseDeveloperAlias = "tvede-dk"
    ext.csenseDeveloperName = "Kasper Tvede"
    ext.csenseDeveloperEmail = "csenseoss@tvedesys.dk"

    ext.readme = "readme.md"
    ext.csenseWebsite = "https://github.com/csense-oss/csense-kotlin"
    ext.csenseGit = "https://github.com/csense-oss/csense-kotlin.git"
    ext.csenseArtifactDescription = ""
    //end library settings
}


plugins {
    id "net.linguica.maven-settings" version "0.5"
    id 'org.jetbrains.kotlin.multiplatform' version "1.4.31"
    id("org.jetbrains.dokka") version "1.4.20"
    id "maven-publish"
    id 'org.jetbrains.kotlinx.benchmark' version '0.3.0'
}

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/csense-oss/maven" }
    maven { url 'https://dl.bintray.com/kotlin/kotlinx' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
}

kotlin {
    explicitApi = 'strict'
    jvm()
    js(LEGACY) { //https://kotlinlang.org/docs/reference/whatsnew14.html#new-js-ir-backend
        browser()
        nodejs()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
                implementation "csense.kotlin:csense-kotlin-annotations:$csenseAnnotationVersion"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "csense.kotlin:csense-kotlin-tests:$csenseTestsVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-benchmark-runtime:0.3.0"
            }
        }
        jvmMain {

        }
        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
                implementation "org.jetbrains.kotlin:kotlin-reflect"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
            }

        }

        jsMain {

        }

        jsTest {
            dependencies {
            }
        }
        all {
            languageSettings {
                enableLanguageFeature("InlineClasses")
                useExperimentalAnnotation('kotlin.RequiresOptIn')
                progressiveMode = true
            }
        }
    }
}

jvmTest {

    testLogging {
        showStandardStreams = true
        events "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
    }
    useJUnitPlatform()
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

project.group = csenseGroupId
project.version = csenseVersionName

apply from: "$rootDir/gradle/publish.gradle"

task uploadProd(dependsOn: ["assemble", "allTests", "publish"])


benchmark {
    targets {
        register("jvmTest") {
            //see https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core / https://github.com/openjdk/jmh
            jmhVersion = "1.28" // available only for JVM compilations & Java source sets
        }
    }
}

